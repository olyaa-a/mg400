-- Функція обрізання пробілів
local function trim(s)
  return (s:gsub("^%s*(.-)%s*$", "%1"))
end

-- Функція розбору одного рядка G-code.
local function parseLine(line)
  local cmd = line:match("^(G%d+)")
  if not cmd then return nil end
  local params = {}
  for key, value in line:gmatch("([XYZIJR])%s*([-+]?%d+%.?%d*)") do
    params[key] = tonumber(value)
  end
  return { cmd = cmd, params = params }
end

-- Функція обчислення проміжної точки дуги (тільки для XY)
local function computeArcMidPoint(start, finish, center, direction)
  local angle1 = math.atan2(start[2] - center[2], start[1] - center[1])
  local angle2 = math.atan2(finish[2] - center[2], finish[1] - center[1])
  local dtheta = angle2 - angle1
  if direction == "G02" then  -- за годинниковою стрілкою
    if dtheta > 0 then dtheta = dtheta - 2 * math.pi end
  elseif direction == "G03" then  -- проти годинникової стрілки
    if dtheta < 0 then dtheta = dtheta + 2 * math.pi end
  end
  local midAngle = angle1 + dtheta / 2
  local radius = math.sqrt((start[1] - center[1])^2 + (start[2] - center[2])^2)
  local midX = center[1] + radius * math.cos(midAngle)
  local midY = center[2] + radius * math.sin(midAngle)
  return { midX, midY }
end

-- Початкова позиція робота (за замовчуванням; змініть за потребою)
local currentPos = { X = 0, Y = 0, Z = 0, R = 0 }

-- Функція обробки одного рядка G-code
local function processGCodeLine(line)
  local parsed = parseLine(line)
  if not parsed then return end

  -- Явно ігноруємо команди, які не є руховими (G21, M3 тощо)
  if parsed.cmd == "G21" or parsed.cmd == "M3" then
    -- G21 встановлює одиниці в мм, M3 – інша операція, тому просто пропускаємо їх
    return
  end

  if parsed.cmd == "G00" then
    -- Швидке переміщення – rapid move (MovJ)
    local p = {
      X = parsed.params.X or currentPos.X,
      Y = parsed.params.Y or currentPos.Y,
      Z = parsed.params.Z or currentPos.Z,
      R = parsed.params.R or currentPos.R
    }
    MovJ(p)
    Sync()
    currentPos = p

  elseif parsed.cmd == "G01" then
    -- Лінійне переміщення – drawing move (MovL)
    local p = {
      X = parsed.params.X or currentPos.X,
      Y = parsed.params.Y or currentPos.Y,
      Z = parsed.params.Z or currentPos.Z,
      R = parsed.params.R or currentPos.R
    }
    MovL(p)
    Sync()
    currentPos = p

  elseif parsed.cmd == "G02" or parsed.cmd == "G03" then
    -- Аркова інтерполяція (G02: за годинниковою, G03: проти)
    local center = {
      X = currentPos.X + (parsed.params.I or 0),
      Y = currentPos.Y + (parsed.params.J or 0)
    }
    local endPoint = {
      X = parsed.params.X or currentPos.X,
      Y = parsed.params.Y or currentPos.Y,
      Z = parsed.params.Z or currentPos.Z,
      R = parsed.params.R or currentPos.R
    }
    local midXY = computeArcMidPoint({ currentPos.X, currentPos.Y },
                                      { endPoint.X, endPoint.Y },
                                      { center.X, center.Y },
                                      parsed.cmd)
    local midPoint = { X = midXY[1], Y = midXY[2], Z = endPoint.Z, R = endPoint.R }
    Arc(midPoint, endPoint, { SpeedL = 50, AccL = 20, CP = 100, SYNC = 1 })
    Sync()
    currentPos = endPoint

  else
    -- Ігноруємо невідомі команди
    print("Ігнорую команду: " .. parsed.cmd)
  end
end

-- Вставка G-code як багаторядкового рядка (замість файлу)
local gcodeText = [[
%
(Header)
(Generated by gcodetools from Inkscape.)
(Using default header. To add your own header create file "header" in the output dir.)
M3
(Header end.)
G21 (All units in mm)

(Start cutting path id: path1)
(Change tool to Default tool)

G00 Z5.000000
G00 X70.153491 Y67.009510

G01 Z-0.100000 F100.0(Penetrate)
G01 X62.055711 Y75.100720 Z-0.100000 F400.000000
G01 X53.863025 Y75.103720 Z-0.100000
G01 X45.670338 Y75.106720 Z-0.100000
G01 X37.099211 Y83.654150 Z-0.100000
G01 X28.528083 Y92.201580 Z-0.100000
G01 X28.528083 Y100.421680 Z-0.100000
G01 X28.528083 Y108.641770 Z-0.100000
... (решта G-code) ...
(End cutting path id: path1)
]]

-- Розбиваємо багаторядковий рядок на окремі рядки та обробляємо їх
for line in gcodeText:gmatch("[^\r\n]+") do
  local trimmed = trim(line)
  if trimmed ~= "" and not trimmed:match("^%%") and not trimmed:match("^%(") then
    processGCodeLine(trimmed)
  end
end

print("Обробка G-code завершена")
