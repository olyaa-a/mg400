-- Функція обрізання пробілів
local function trim(s)
  return (s:gsub("^%s*(.-)%s*$", "%1"))
end

-- Функція розбору одного рядка G-code.
local function parseLine(line)
  local cmd = line:match("^(G%d+)")
  if not cmd then return nil end
  local params = {}
  for key, value in line:gmatch("([XYZIJR])%s*([-+]?%d+%.?%d*)") do
    params[key] = tonumber(value)
  end
  return { cmd = cmd, params = params }
end

-- Функція обчислення проміжної точки дуги (тільки для XY)
local function computeArcMidPoint(start, finish, center, direction)
  local angle1 = math.atan2(start.y - center.y, start.x - center.x)
  local angle2 = math.atan2(finish.y - center.y, finish.x - center.x)
  local dtheta = angle2 - angle1
  if direction == "G02" then
    if dtheta > 0 then dtheta = dtheta - 2 * math.pi end
  elseif direction == "G03" then
    if dtheta < 0 then dtheta = dtheta + 2 * math.pi end
  end
  local midAngle = angle1 + dtheta / 2
  local radius = math.sqrt((start.x - center.x)^2 + (start.y - center.y)^2)
  return { x = center.x + radius * math.cos(midAngle), y = center.y + radius * math.sin(midAngle) }
end

-- Глобальна поточна позиція (використовуємо нижній регістр)
local currentPos = { x = 0, y = 0, z = 0, r = 0 }

-- Функція обробки одного рядка G-code
local function processGCodeLine(line)
  local parsed = parseLine(line)
  if not parsed then return end

  -- Ігноруємо команди, які не є руховими
  if parsed.cmd == "G21" or parsed.cmd == "M3" then
    return
  end

  if parsed.cmd == "G00" then
    local p = {
      x = parsed.params.X or currentPos.x,
      y = parsed.params.Y or currentPos.y,
      z = parsed.params.Z or currentPos.z,
      r = parsed.params.R or currentPos.r
    }
    MovJ(p)
    Sync()
    currentPos = p

  elseif parsed.cmd == "G01" then
    local p = {
      x = parsed.params.X or currentPos.x,
      y = parsed.params.Y or currentPos.y,
      z = parsed.params.Z or currentPos.z,
      r = parsed.params.R or currentPos.r
    }
    MovL(p)
    Sync()
    currentPos = p

  elseif parsed.cmd == "G02" or parsed.cmd == "G03" then
    local center = {
      x = currentPos.x + (parsed.params.I or 0),
      y = currentPos.y + (parsed.params.J or 0)
    }
    local endPoint = {
      x = parsed.params.X or currentPos.x,
      y = parsed.params.Y or currentPos.y,
      z = parsed.params.Z or currentPos.z,
      r = parsed.params.R or currentPos.r
    }
    local midXY = computeArcMidPoint({ x = currentPos.x, y = currentPos.y },
                                      { x = endPoint.x, y = endPoint.y },
                                      center,
                                      parsed.cmd)
    local midPoint = { x = midXY.x, y = midXY.y, z = endPoint.z, r = endPoint.r }
    Arc(midPoint, endPoint, { SpeedL = 50, AccL = 20, CP = 100, SYNC = 1 })
    Sync()
    currentPos = endPoint

  else
    print("Ігнорую команду: " .. parsed.cmd)
  end
end

-- G-code як багаторядковий рядок (вставте сюди ваш повний G-code)
local gcodeText = [[
%
(Header)
(Generated by gcodetools from Inkscape.)
(Using default header. To add your own header create file "header" in the output dir.)
M3
(Header end.)
G21 (All units in mm)

(Start cutting path id: path1)
(Change tool to Default tool)

G00 Z5.000000
G00 X70.153491 Y67.009510

G01 Z-0.100000 F100.0(Penetrate)
G01 X62.055711 Y75.100720 Z-0.100000 F400.000000
G01 X53.863025 Y75.103720 Z-0.100000
G01 X45.670338 Y75.106720 Z-0.100000
G01 X37.099211 Y83.654150 Z-0.100000
G01 X28.528083 Y92.201580 Z-0.100000
G01 X28.528083 Y100.421680 Z-0.100000
G01 X28.528083 Y108.641770 Z-0.100000
...
(End cutting path id: path1)
]]

for line in gcodeText:gmatch("[^\r\n]+") do
  local trimmed = trim(line)
  if trimmed ~= "" and not trimmed:match("^%%") and not trimmed:match("^%(") then
    processGCodeLine(trimmed)
  end
end

print("Обробка G-code завершена")
